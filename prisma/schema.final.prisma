// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  password   String
  wallets    Wallet[]
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Wallet {
  id           String        @id @default(uuid())
  name         String
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum TransactionType {
  income
  expense
  transfer
}

model Transaction {
  id                 String          @id @default(uuid())
  amount             Float
  description        String
  type               TransactionType
  date               DateTime
  walletId           String
  wallet             Wallet          @relation(fields: [walletId], references: [id])
  destinationWalletId String?
  categoryId         String
  category           Category        @relation(fields: [categoryId], references: [id])
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
}

model Category {
  id           String        @id @default(uuid())
  name         String
  icon         String
  userId       String        // Now required
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([name, userId], name: "name_userId")
}